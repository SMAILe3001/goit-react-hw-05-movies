{"version":3,"file":"static/js/565.a4fd83d1.chunk.js","mappings":"0LAAaA,EAAS,CACpB,GAAI,SACJ,GAAI,YACJ,GAAI,YACJ,GAAI,SACJ,GAAI,QACJ,GAAI,cACJ,GAAI,QACJ,MAAO,SACP,GAAI,UACJ,GAAI,UACJ,GAAI,SACJ,MAAO,QACP,KAAM,UACN,MAAO,UACP,IAAK,kBACL,MAAO,WACP,GAAI,WACJ,MAAO,MACP,GAAI,W,kBCiBN,EA/BiB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAU,uBAAd,SACGH,EAAKI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,eAAtC,OACR,eAAaN,UAAU,YAAvB,UACE,UAAC,KAAD,CAAMO,GAAE,qBAAgBL,GAAMM,MAAO,CAAEC,KAAMX,GAA7C,WACE,gBACEY,QAAQ,OACRV,UAAU,cACVW,IACER,EAAW,yCAC2BA,GAClCS,EAENC,IAAKP,KAEP,eAAIN,UAAU,aAAd,SAA4BI,KAC5B,gBAAKJ,UAAU,YAAf,UACE,iBAAMA,UAAU,eAAhB,SACGK,EAAUJ,KAAI,SAAAC,GAAE,OAAIN,EAAOM,EAAX,IAAgBY,KAAK,cAfrCZ,EADD,KAwBf,C,kIC4CD,UAxEe,WAAO,IAAD,EACnB,GAAwCa,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAA0BR,EAAAA,EAAAA,WAAS,GAAnC,eAAOS,EAAP,KAAcC,EAAd,KAEMC,EAAK,UAAGb,EAAac,IAAI,gBAApB,QAAgC,GAqC3C,OAtBAC,EAAAA,EAAAA,YAAU,WACM,KAAVF,GACJT,EAAeS,EAChB,GAAE,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBZ,EAAJ,CACA,IAAMa,EAAU,mCAAG,oGAEfN,GAAa,GAFE,UAGSO,EAAAA,EAAAA,GAAW,eAAgBd,GAHpC,OAGTe,EAHS,OAIfV,GAAU,OAAIU,EAAUC,UAJT,gDAMfP,GAAS,GACTQ,QAAQC,IAAR,MAPe,yBASfX,GAAa,GATE,4EAAH,qDAYhBM,GAb8B,CAc/B,GAAE,CAACb,KAGF,UAAC,IAAD,YACE,kBAAMmB,MAAO,CAAEC,aAAc,IAAMC,SArCb,SAAAC,GACxBA,EAAEC,iBAEiB,KAAfrB,IAEJJ,EAAgB,CAAEY,MAAOR,IACzBD,EAAeC,GAChB,EA8BG,WACE,4BACE,kBACEiB,MAAO,CACLK,MAAO,IACPC,OAAQ,GACRC,YAAa,GACbC,aAAc,EACdC,SAAU,GACVC,YAAa,GAEfC,KAAK,OACLC,SAxCgB,SAAAT,GACxBnB,EAAcmB,EAAEU,OAAOC,MACxB,EAuCSA,MAAO/B,OAGX,mBAAQ4B,KAAK,SAAb,uBAEkB,KAAb,OAAN1B,QAAM,IAANA,OAAA,EAAAA,EAAQ8B,UAAgB,SAAC,IAAD,CAAUxD,KAAM0B,IACxCE,IAAa,+CACbE,IAAS,sHAGf,C,8FC5EY2B,EAAW,gCACXC,EAAU,mCCEjBtB,EAAU,mCAAG,WAAOuB,GAAP,4FAAmB3B,EAAnB,+BAA2B,GAAI4B,EAA/B,+BAAsC,EAAtC,SACJC,EAAAA,EAAAA,IAAA,UACHJ,GADG,OACQE,GAAc,CAC/BG,OAAQ,CACNF,KAAMA,EACNG,QAASL,EACTM,SAAU,KACVhC,MAAOA,KAGViC,MAAK,SAAAC,GAAQ,OAAIA,EAASlE,IAAb,IAVC,mFAAH,sDAahB,G","sources":["servises/genres.js","components/FilmList/FilmList.jsx","pages/Search.jsx","servises/api.js","servises/servise.js"],"sourcesContent":["export const genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\n// https://api.themoviedb.org/3/genre/movie/list?api_key=432ccaf7113b52e993b924f1fb358945&language=en\n","import { Link, useLocation } from 'react-router-dom';\nimport { genres } from 'servises/genres';\nimport './FilmList.scss';\nimport defaultImages from '../../img/onImages.png';\n\nconst FilmList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"gallery-markup  list\">\n      {data.map(({ id, poster_path, title, genre_ids, original_title }) => (\n        <li key={id} className=\"film-card\">\n          <Link to={`/info-film/${id}`} state={{ from: location }}>\n            <img\n              loading=\"lazy\"\n              className=\"film-poster\"\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImages\n              }\n              alt={original_title}\n            />\n            <h2 className=\"film-title\">{title}</h2>\n            <div className=\"film-info\">\n              <span className=\"film-details\">\n                {genre_ids.map(id => genres[id]).join(', ')}\n              </span>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilmList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport fetchFilms from 'servises/servise';\nimport Container from 'components/Container/Container';\nimport FilmList from 'components/FilmList/FilmList';\n\nconst Search = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchFilms, setSearchFilms] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  const handelInputSubmit = e => {\n    e.preventDefault();\n\n    if (searchText === '') return;\n\n    setSearchParams({ query: searchText });\n    setSearchFilms(searchText);\n  };\n\n  const updataQueryString = e => {\n    setSearchText(e.target.value);\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n    setSearchFilms(query);\n  }, [query]);\n\n  useEffect(() => {\n    if (searchFilms === '') return;\n    const searchData = async () => {\n      try {\n        setIsLoading(true);\n        const filmsData = await fetchFilms(`search/movie`, searchFilms);\n        setMovies([...filmsData.results]);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchData();\n  }, [searchFilms]);\n\n  return (\n    <Container>\n      <form style={{ marginBottom: 12 }} onSubmit={handelInputSubmit}>\n        <label>\n          <input\n            style={{\n              width: 550,\n              height: 25,\n              marginRight: 12,\n              borderRadius: 4,\n              fontSize: 16,\n              paddingLeft: 8,\n            }}\n            type=\"text\"\n            onChange={updataQueryString}\n            value={searchText}\n          />\n        </label>\n        <button type=\"submit\">search</button>\n      </form>\n      {movies?.length !== 0 && <FilmList data={movies} />}\n      {isLoading && <h2>We download movies</h2>}\n      {error && <h2>Щось пішло не так</h2>}\n    </Container>\n  );\n};\n\nexport default Search;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '432ccaf7113b52e993b924f1fb358945';\n","import axios from 'axios';\nimport { BASE_URL, API_KEY } from './api';\n\nconst fetchFilms = async (parameters, query = '', page = 1) => {\n  return await axios\n    .get(`${BASE_URL}${parameters}`, {\n      params: {\n        page: page,\n        api_key: API_KEY,\n        language: 'en',\n        query: query,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport default fetchFilms;\n"],"names":["genres","data","location","useLocation","className","map","id","poster_path","title","genre_ids","original_title","to","state","from","loading","src","defaultImages","alt","join","useSearchParams","searchParams","setSearchParams","useState","searchFilms","setSearchFilms","searchText","setSearchText","movies","setMovies","isLoading","setIsLoading","error","setError","query","get","useEffect","searchData","fetchFilms","filmsData","results","console","log","style","marginBottom","onSubmit","e","preventDefault","width","height","marginRight","borderRadius","fontSize","paddingLeft","type","onChange","target","value","length","BASE_URL","API_KEY","parameters","page","axios","params","api_key","language","then","response"],"sourceRoot":""}