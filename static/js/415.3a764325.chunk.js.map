{"version":3,"file":"static/js/415.3a764325.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","servises/genres.js","components/FilmList/FilmList.jsx","pages/Home.jsx","servises/api.js","servises/servise.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClick, children }) => {\n  return (\n    <button className=\"button\" onClick={onClick} type=\"button\">\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propType = {\n  onClick: PropTypes.func,\n  children: PropTypes.object,\n};\n","export const genres = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\n// https://api.themoviedb.org/3/genre/movie/list?api_key=432ccaf7113b52e993b924f1fb358945&language=en\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { genres } from 'servises/genres';\nimport './FilmList.scss';\nimport defaultImages from '../../img/onImages.png';\n\nconst FilmList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"gallery-markup  list\">\n      {data.map(({ id, poster_path, title, genre_ids, original_title }) => (\n        <li key={id} className=\"film-card\">\n          <Link to={`/info-film/${id}`} state={{ from: location }}>\n            <img\n              loading=\"lazy\"\n              className=\"film-poster\"\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImages\n              }\n              alt={original_title}\n            />\n            <h2 className=\"film-title\">{title}</h2>\n            <div className=\"film-info\">\n              <span className=\"film-details\">\n                {genre_ids.map(id => genres[id]).join(', ')}\n              </span>\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilmList;\n\nFilmList.propType = {\n  data: PropTypes.array,\n};\n","import { useState, useEffect } from 'react';\nimport fetchFilms from 'servises/servise';\nimport Button from 'components/Button/Button';\nimport Container from 'components/Container/Container';\nimport FilmList from 'components/FilmList/FilmList';\n\nconst Home = () => {\n  const [topFilms, setTopFilms] = useState('day');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const searchData = async () => {\n      try {\n        setIsLoading(true);\n        const filmsData = await fetchFilms(`trending/movie/${topFilms}`);\n        setMovies([...filmsData.results]);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchData();\n  }, [topFilms]);\n\n  return (\n    <>\n      <Container>\n        <h2>Top popular movies</h2>\n        <ul\n          style={{\n            listStyle: 'none',\n            display: 'flex',\n            gap: 12,\n            marginBottom: 12,\n          }}\n        >\n          <li>\n            <Button onClick={() => setTopFilms('day')}>In a day</Button>\n          </li>\n          <li>\n            <Button onClick={() => setTopFilms('week')}>In a week</Button>\n          </li>\n        </ul>\n        <FilmList data={movies} />\n        {isLoading && <h2>We download movies</h2>}\n        {error && <h2>Щось пішло не так</h2>}\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '432ccaf7113b52e993b924f1fb358945';\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from './api';\n\nconst fetchFilms = async (parameters, query = '', page = 1) => {\n  return await axios\n    .get(`${BASE_URL}${parameters}`, {\n      params: {\n        page: page,\n        api_key: API_KEY,\n        language: 'uk',\n        query: query,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport default fetchFilms;\n\nfetchFilms.propType = {\n  parameters: PropTypes.string,\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n"],"names":["Button","onClick","children","className","type","propType","PropTypes","genres","FilmList","data","location","useLocation","map","id","poster_path","title","genre_ids","original_title","to","state","from","loading","src","defaultImages","alt","join","useState","topFilms","setTopFilms","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","searchData","fetchFilms","filmsData","results","console","log","style","listStyle","display","gap","marginBottom","BASE_URL","API_KEY","parameters","query","page","axios","params","api_key","language","then","response"],"sourceRoot":""}